scalar DateTime
schema {
    query: Query
    mutation: Mutation
}

type Query {
    movies: [Movie!]
    movie(id: Int!): Movie
    searchMovies(title: String!): [Movie!]
    filterMovies(category: Category, releaseDate: Int): [Movie!]

    actors: [Actor!]!
    actor(id: Int!): Actor
    searchActors(name: String!): [Actor!]
}

type Mutation {
    createMovie(input:MovieInput): Movie!
    updateMovie(id: Int!, input:MovieInput): Movie!
    deleteMovie(id: Int!): Int!

    createActor(input:ActorInput): Actor!
    updateActor(id: Int!, input:ActorInput): Actor!
    deleteActor(id: Int!): Int!
}

type Movie{
    id: Int!
    title: String!
    releaseDate: Int!
    category: Category!
    actors: [Actor!]!
}
enum Category{
    ACTION
    COMEDY
    DRAMA
    FANTASY
    HORROR
    MYSTERY
    ROMANCE
    THRILLER
}

input MovieInput{
    title: String!
    releaseDate: Int!
    actors: [Int!]
}

type Actor{
    id: Int!
    name: String!
    gender: Gender!
    movies: [Movie!]!
}
enum Gender {
    MALE
    FEMALE
}

input ActorInput{
    name: String!
    gender: Gender!
    movies: [Int!]
}
